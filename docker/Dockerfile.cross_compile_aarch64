FROM --platform=linux/amd64 centos:7.6.1810

ARG java_version=22.0.2-zulu
ARG gcc_version=10.2-2020.11
ENV GCC_VERSION $gcc_version
ENV SOURCE_DIR /root/source


# Update to use the vault
RUN sed -i -e 's/^mirrorlist/#mirrorlist/g' -e 's/^#baseurl=http:\/\/mirror.centos.org\/centos\/$releasever\//baseurl=https:\/\/linuxsoft.cern.ch\/centos-vault\/\/7.6.1810\//g' /etc/yum.repos.d/CentOS-Base.repo

# Install requirements
RUN yum install -y wget tar git make redhat-lsb-core autoconf automake libtool glibc-devel libaio-devel openssl-devel apr-devel lksctp-tools unzip zip

# Downloading and installing SDKMAN!
RUN curl -s  "https://get.sdkman.io" | bash
ENV JAVA_VERSION $java_version

# Installing Java removing some unnecessary SDKMAN files
RUN bash -c "source $HOME/.sdkman/bin/sdkman-init.sh && \
    yes | sdk install java $JAVA_VERSION && \
    rm -rf $HOME/.sdkman/archives/* && \
    rm -rf $HOME/.sdkman/tmp/*"

RUN echo 'export JAVA_HOME="/root/.sdkman/candidates/java/current"' >> ~/.bashrc

RUN mkdir $SOURCE_DIR
WORKDIR $SOURCE_DIR

# Install aarch64 gcc 10.2 toolchain
RUN wget https://developer.arm.com/-/media/Files/downloads/gnu-a/$GCC_VERSION/binrel/gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu.tar.xz && \
   tar xvf gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu.tar.xz && mv gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu /opt/
ENV PATH="/opt/gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu/bin:${PATH}"

ENV JAVA_HOME="/root/.sdkman/candidates/java/current"

# Cleanup
RUN rm -rf $SOURCE_DIR
RUN yum clean all && \
    rm -rf /var/cache/yum
